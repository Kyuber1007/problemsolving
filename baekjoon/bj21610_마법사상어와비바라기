import sys
input = sys.stdin.readline
N, M = map(int, input().split())

grids = []
for i in range(N):
    grids.append(list(map(int, input().split())))

orders = []
for i in range(M):
    orders.append(list(map(int, input().split())))
    
clouds = [[N-1, 0], [N-1, 1], [N-2, 0], [N-2, 1]]

dx = [0, -1, -1, -1, 0, 1, 1, 1]
dy = [-1, -1, 0, 1, 1, 1, 0, -1]

for i in range(M):
    direction = orders[i][0] - 1
    steps = orders[i][1]
    new_clouds = []
    
    # step1
    for cloud in clouds:
        nx = (cloud[0] + dx[direction] * steps) % N
        ny = (cloud[1] + dy[direction] * steps) % N
        new_clouds.append([nx, ny])
    
    # step2 
    visited = [[False] * N for _ in range(N)]
    for cloud in new_clouds:
        x = cloud[0]
        y = cloud[1]
        grids[x][y] += 1 
        visited[x][y] = True

    # step3
    clouds = []

    # step4
    cx = [-1, 1, -1, 1]
    cy = [-1, 1, 1, -1]
    for cloud in new_clouds:
        x = cloud[0]
        y = cloud[1]
        for i in range(4):
            nx = x + cx[i]
            ny = y + cy[i]
            if 0 <= nx < N and 0 <= ny < N and grids[nx][ny] > 0:
                grids[x][y] += 1
                
    # step5
    for i in range(N):
        for j in range(N):
            if grids[i][j] >= 2 and [i, j] and visited[i][j] == False:
                clouds.append([i, j])
                grids[i][j] -= 2
answer = 0
for i in range(N):
    answer += sum(grids[i])
print(answer)